% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/maga.R, R/mantelGA.R
\name{maga}
\alias{maga}
\title{Genetic Algorithm Mantel test}
\usage{
maga(
  fix.mat,
  var.mat,
  fix.dist.method = "bray",
  var.dist.method = "euclidean",
  scale.fix = FALSE,
  scale.var = TRUE,
  popSize = 50,
  parallel = FALSE,
  maxiter = 100,
  nBits = ncol(var.mat),
  seed = NULL,
  ...
)

maga(
  fix.mat,
  var.mat,
  fix.dist.method = "bray",
  var.dist.method = "euclidean",
  scale.fix = FALSE,
  scale.var = TRUE,
  popSize = 50,
  parallel = FALSE,
  maxiter = 100,
  nBits = ncol(var.mat),
  seed = NULL,
  ...
)
}
\arguments{
\item{fix.mat}{The "fixed" matrix of community or environmental sample by variable values}

\item{var.mat}{A "variable" matrix of community or environmental sample by variable values}

\item{fix.dist.method}{The method of calculating dissimilarity indices bewteen samples in the fixed
matrix (Uses the \code{\link[vegan]{vegdist}} function from the vegan package to calculate distance matrices. See 
the documentation for available methods.). Defaults to Bray-Curtis dissimularity \code{"bray"}.}

\item{var.dist.method}{The method of calculating dissimilarity indices bewteen samples in the variable
matrix. Defaults to Euclidean dissimularity \code{"euclidean"}.}

\item{scale.fix}{Logical. Should fixed matrix be centered and scaled (Defaults to \code{FALSE}, 
recommended for biologic data).}

\item{scale.var}{Logical. Should fixed matrix be centered and scaled (Defaults to \code{TRUE}, 
recommended for environmental data to correct for differing units between variables).}

\item{popSize}{the population size.}

\item{parallel}{a logical argument specifying if parallel computing should be used (TRUE) or not (FALSE, default) 
for evaluating the fitness function.}

\item{maxiter}{the maximum number of iterations to run before the GA search is halted.}

\item{nBits}{passed to ga}

\item{...}{Additional arguments passed to ga}
}
\value{
ga results

ga results
}
\description{
Genetic Algorithm Mantel test

Genetic Algorithm Mantel test
}
\examples{
\donttest{
library(vegan)
library(GA)
data("varechem")
data("varespec")

### envbio
fit <- maga(
 fix.mat = varechem,
 var.mat = varespec,
 fix.dist.method="euclidean",
 var.dist.method="bray",
 scale.fix = TRUE,
 scale.var = FALSE,
 popSize = 60,
 parallel = FALSE,
 maxiter = 200,
 run = 50,
 pmutation = 0.3,
 seed = 1
)

factorial(ncol(varespec)) # n combinations

res <- magaBest(fit, output.best = 10)
res$order.by.best
res$order.by.i.comb
plot(res)




### Compare to bvstep
set.seed(1111)
res2 <- bvStep(
 fix.mat = varechem,
 var.mat = varespec,
 fix.dist.method="euclidean",
 var.dist.method="bray",
 scale.fix = TRUE,
 scale.var = FALSE,
 num.restarts = 50)

res2$order.by.best # mantelGA not looking in simpler solutions enough

# seed population with singular solutions
suggestedSol <- diag(ncol(varespec))
fit3 <- maga(
 fix.mat = varechem,
 var.mat = varespec,
 fix.dist.method="euclidean",
 var.dist.method="bray",
 scale.fix = TRUE,
 scale.var = FALSE,
 popSize = nrow(suggestedSol)*3,
 parallel = FALSE,
 maxiter = 200,
 run = 100,
 pcrossover = 0.05,
 pmutation = 0.1, #function(...) GA::ga_pmutation(..., p0=1, p=0.3),
 seed = 1, 
 suggestions = rbind(suggestedSol, suggestedSol)
)
plot(fit3)

res3 <- magaBest(fit3)
res3$order.by.best
res3$order.by.i.comb

plot(res3)






}

\donttest{
library(vegan)
library(GA)
data("varechem")
data("varespec")

### envbio
fit <- maga(
 fix.mat = varechem,
 var.mat = varespec,
 fix.dist.method="euclidean",
 var.dist.method="bray",
 scale.fix = TRUE,
 scale.var = FALSE,
 popSize = 60,
 parallel = FALSE,
 maxiter = 200,
 run = 50,
 pmutation = 0.3,
 seed = 1
)

factorial(ncol(varespec)) # n combinations

res <- magaBest(fit, output.best = 10)
res$order.by.best
res$order.by.i.comb
plot(res)




### Compare to bvstep
set.seed(1111)
res2 <- bvStep(
 fix.mat = varechem,
 var.mat = varespec,
 fix.dist.method="euclidean",
 var.dist.method="bray",
 scale.fix = TRUE,
 scale.var = FALSE,
 num.restarts = 50)

res2$order.by.best # mantelGA not looking in simpler solutions enough

# seed population with singular solutions
suggestedSol <- diag(ncol(varespec))
fit3 <- maga(
 fix.mat = varechem,
 var.mat = varespec,
 fix.dist.method="euclidean",
 var.dist.method="bray",
 scale.fix = TRUE,
 scale.var = FALSE,
 popSize = nrow(suggestedSol),
 parallel = FALSE,
 maxiter = 200,
 run = 100,
 pcrossover = 0.3,
 pmutation = function(...) GA::ga_pmutation(..., p0=1, p=0.3),
 seed = 1111, 
 suggestions = suggestedSol
)
plot(fit3)

res3 <- magaBest(fit3)
res3$order.by.best
res3$order.by.i.comb

plot(res3)






}

}
