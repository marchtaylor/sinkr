% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mantelGA.R
\name{mantelGA}
\alias{mantelGA}
\title{Genetic Algorithm Mantel}
\usage{
mantelGA(fix.mat, var.mat, fix.dist.method = "bray",
  var.dist.method = "euclidean", scale.fix = FALSE, scale.var = TRUE,
  popSize = 50, parallel = FALSE, maxiter = 100,
  nBits = ncol(var.mat), ...)
}
\arguments{
\item{fix.mat}{The "fixed" matrix of community or environmental sample by variable values}

\item{var.mat}{A "variable" matrix of community or environmental sample by variable values}

\item{fix.dist.method}{The method of calculating dissimilarity indices bewteen samples in the fixed
matrix (Uses the \code{\link[vegan]{vegdist}} function from the vegan package to calculate distance matrices. See 
the documentation for available methods.). Defaults to Bray-Curtis dissimularity \code{"bray"}.}

\item{var.dist.method}{The method of calculating dissimilarity indices bewteen samples in the variable
matrix. Defaults to Euclidean dissimularity \code{"euclidean"}.}

\item{scale.fix}{Logical. Should fixed matrix be centered and scaled (Defaults to \code{FALSE}, 
recommended for biologic data).}

\item{scale.var}{Logical. Should fixed matrix be centered and scaled (Defaults to \code{TRUE}, 
recommended for environmental data to correct for differing units between variables).}

\item{popSize}{the population size.}

\item{parallel}{a logical argument specifying if parallel computing should be used (TRUE) or not (FALSE, default) 
for evaluating the fitness function.}

\item{maxiter}{the maximum number of iterations to run before the GA search is halted.}

\item{nBits}{passed to ga}

\item{...}{Additional arguments passed to ga}
}
\value{
ga results
}
\description{
Genetic Algorithm Mantel
}
\examples{
\donttest{
library(vegan)
library(GA)
data("varechem")
data("varespec")

fit <- mantelGA(
 fix.mat = varechem,
 var.mat = varespec,
 fix.dist.method="euclidean",
 var.dist.method="bray",
 scale.fix=TRUE,
 scale.var=FALSE,
 popSize = 50,
 parallel = FALSE,
 maxiter = 50,
 pmutation = 0.2,
 seed = 1
)

fit@solution
fit@fitnessValue # Best = 0.5091520
plot(fit)
paste(colnames(varespec)[as.logical(fit@solution)], collapse=",")
}

}
